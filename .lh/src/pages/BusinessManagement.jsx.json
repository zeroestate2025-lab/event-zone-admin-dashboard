{
    "sourceFile": "src/pages/BusinessManagement.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1749431865519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749432220457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,15 +137,15 @@\n               filteredBusinesses.length > 0 &&\r\n               filteredBusinesses.map((business) => {\r\n                 // Log the specific business object and its isApproved status right before rendering\r\n                 console.log(\r\n-                  // `Rendering business in table: ID: ${business.ID}, Name: ${business.businessName}, isApproved: ${business.isApproved}, typeof isApproved: ${typeof business.isApproved}`\r\n-                   `BusinessManagement - Rendering Row: ID=${business.ID}, Name=\"${business.businessName}\", isApproved=${business.isApproved} (Type: ${typeof business.isApproved})`\r\n+                  // `Rendering business in table: ID: ${business.id}, Name: ${business.businessName}, isApproved: ${business.isApproved}, typeof isApproved: ${typeof business.isApproved}`\r\n+                   `BusinessManagement - Rendering Row: ID=${business.id}, Name=\"${business.businessName}\", isApproved=${business.isApproved} (Type: ${typeof business.isApproved})`\r\n                 );\r\n                 const isActive = !!business.isApproved; // Explicit boolean conversion\r\n                 return (\r\n-                  <tr key={business.ID}>\r\n-                    <td>{business.ID}</td>\r\n+                  <tr key={business.id}>\r\n+                    <td>{business.id}</td>\r\n                     <td>{business.businessName}</td>\r\n                     <td>{business.serviceProvided}</td>\r\n                     <td>{business.phoneNumber}</td>\r\n                     <td>\r\n"
                },
                {
                    "date": 1749477460802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,15 +132,13 @@\n \r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n-            {!isLoadingList &&\r\n-              filteredBusinesses.length > 0 &&\r\n+            {!isLoadingList && !errorList && filteredBusinesses.length > 0 ? (\r\n               filteredBusinesses.map((business) => {\r\n                 // Log the specific business object and its isApproved status right before rendering\r\n                 console.log(\r\n-                  // `Rendering business in table: ID: ${business.id}, Name: ${business.businessName}, isApproved: ${business.isApproved}, typeof isApproved: ${typeof business.isApproved}`\r\n-                   `BusinessManagement - Rendering Row: ID=${business.id}, Name=\"${business.businessName}\", isApproved=${business.isApproved} (Type: ${typeof business.isApproved})`\r\n+                  `BusinessManagement - Rendering Row: ID=${business.id}, Name=\"${business.businessName}\", isApproved=${business.isApproved} (Type: ${typeof business.isApproved})`\r\n                 );\r\n                 const isActive = !!business.isApproved; // Explicit boolean conversion\r\n                 return (\r\n                   <tr key={business.id}>\r\n@@ -159,10 +157,10 @@\n                       </Link>\r\n                     </td>\r\n                   </tr>\r\n                 );\r\n-              })}\r\n-            {!isLoadingList && filteredBusinesses.length === 0 && !errorList && (\r\n+              })\r\n+            ) : !isLoadingList && !errorList && filteredBusinesses.length === 0 ? (\r\n               <tr>\r\n                 <td colSpan=\"6\" style={{ textAlign: 'center' }}>No vendors found.</td>\r\n               </tr>\r\n             )}\r\n"
                },
                {
                    "date": 1749477564625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n             ) : !isLoadingList && !errorList && filteredBusinesses.length === 0 ? (\r\n               <tr>\r\n                 <td colSpan=\"6\" style={{ textAlign: 'center' }}>No vendors found.</td>\r\n               </tr>\r\n-            )}\r\n+            )};\r\n           </tbody>\r\n         </table>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1749477569694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,10 @@\n             ) : !isLoadingList && !errorList && filteredBusinesses.length === 0 ? (\r\n               <tr>\r\n                 <td colSpan=\"6\" style={{ textAlign: 'center' }}>No vendors found.</td>\r\n               </tr>\r\n-            )};\r\n+            )}\r\n+          )\r\n           </tbody>\r\n         </table>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1749477606710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n             ) : !isLoadingList && !errorList && filteredBusinesses.length === 0 ? (\r\n               <tr>\r\n                 <td colSpan=\"6\" style={{ textAlign: 'center' }}>No vendors found.</td>\r\n               </tr>\r\n-            )}\r\n+            )}:\r\n           </tbody>\r\n         </table>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1749477613398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n             ) : !isLoadingList && !errorList && filteredBusinesses.length === 0 ? (\r\n               <tr>\r\n                 <td colSpan=\"6\" style={{ textAlign: 'center' }}>No vendors found.</td>\r\n               </tr>\r\n-            )}: null}\r\n+            )}\r\n           </tbody>\r\n         </table>\r\n       </div>\r\n     </div>\r\n"
                }
            ],
            "date": 1749431865519,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from 'react';\r\nimport '../styles/BusinessManagement.css';\r\n// Assuming your API service functions are in a file like 'apiService.js'\r\n// You might need to adjust the path based on your project structure.\r\nimport { getAllBusinessPartners } from '../services/apiService'; // getBusinessPartnerCount might not be needed if we count client-side\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\n\r\n\r\nfunction BusinessManagement({ isSidebarOpen }) {\r\n  const [allBusinesses, setAllBusinesses] = useState([]);\r\n  const [filteredBusinesses, setFilteredBusinesses] = useState([]);\r\n  const [isLoadingList, setIsLoadingList] = useState(true);\r\n  const [errorList, setErrorList] = useState(null);\r\n\r\n  // We will derive approvedVendorCount from the allBusinesses list\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  // State for the service type dropdown in the header\r\n  const [isServiceDropdownOpen, setIsServiceDropdownOpen] = useState(false);\r\n  const [selectedService, setSelectedService] = useState('All Services');\r\n  \r\n  // Options for the dropdown\r\n  const serviceFilterOptions = ['All Services', 'Wedding', 'Reception', 'Birthday', 'Anniversary', 'Corporate Event'];\r\n\r\n  // Toggle dropdown visibility\r\n  const toggleServiceDropdown = () => {\r\n    setIsServiceDropdownOpen(!isServiceDropdownOpen);\r\n  };\r\n\r\n  // Handle selection of a service option\r\n  const handleServiceSelect = (value) => {\r\n    setSelectedService(value);\r\n    setIsServiceDropdownOpen(false); // Close the dropdown after selection\r\n  };\r\n\r\n  // Effect to fetch all business partners list\r\n  useEffect(() => {\r\n    const loadVendors = async () => {\r\n      try {\r\n        setIsLoadingList(true);\r\n        setErrorList(null);\r\n        const data = await getAllBusinessPartners();\r\n        console.log(\"Fetched All Businesses (Raw from API in BusinessManagement):\", JSON.stringify(data, null, 2));\r\n        // Filter for approved businesses immediately\r\n        const approvedBusinesses = (data || []).filter(business => business.isApproved === true);\r\n        setAllBusinesses(approvedBusinesses);\r\n        setFilteredBusinesses(data || []); // Initially show all\r\n      } catch (err) {\r\n        setErrorList(err);\r\n        console.error(\"Failed to fetch business partners list:\", err);\r\n      } finally {\r\n        setIsLoadingList(false);\r\n      }\r\n    };\r\n    loadVendors();\r\n  }, []);\r\n\r\n  // Effect to filter businesses when selectedService or allBusinesses changes\r\n  useEffect(() => {\r\n    // Filter only from the already approved businesses stored in allBusinesses state\r\n    const businessesToFilter = allBusinesses.filter(business => business.isApproved === true);\r\n\r\n    if (selectedService === 'All Services') {\r\n      setFilteredBusinesses(businessesToFilter);\r\n    } else {\r\n      setFilteredBusinesses(\r\n        businessesToFilter.filter(business => business.serviceProvided === selectedService)\r\n      );\r\n    }\r\n  }, [selectedService, allBusinesses]);\r\n\r\n  const approvedVendorCount = allBusinesses.length; // Since allBusinesses now only stores approved ones\r\n\r\n\r\n  return (\r\n    <div className={`business-management ${isSidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}>\r\n      {/* Header Section */}\r\n      <div className=\"business-management-header\">\r\n        <div className=\"header-left\">\r\n          <span className=\"back-arrow\">←</span>\r\n          <h1>Business Management</h1>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <div className=\"search-bar\">\r\n            <input type=\"text\" placeholder=\"Search\" />\r\n            <span className=\"search-icon\">🔍</span>\r\n          </div>\r\n          <div className=\"total-vendors\">\r\n            <span>Total Approved Vendors: {isLoadingList ? '...' : approvedVendorCount}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {isLoadingList && <p className=\"loading-message\">Loading vendors list...</p>}\r\n      {errorList && (\r\n        <p className=\"error-message\">\r\n          Error fetching vendors list: {typeof errorList === 'string' ? errorList : errorList.message || 'Unknown error'}\r\n        </p>\r\n      )}\r\n\r\n\r\n      {/* Table Section */}\r\n      <div className=\"business-table-container\">\r\n        <table className=\"business-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Business ID</th>\r\n              <th>Name</th>\r\n              <th>\r\n                <div className=\"custom-dropdown\">\r\n                  <div className=\"dropdown-header\" onClick={toggleServiceDropdown}>\r\n                    {selectedService} <span className=\"dropdown-arrow\">▼</span>\r\n                  </div>\r\n                  {isServiceDropdownOpen && (\r\n                    <ul className=\"dropdown-options\">\r\n                      {serviceFilterOptions.map((option) => (\r\n                        <li\r\n                          key={option}\r\n                          className=\"dropdown-option\"\r\n                          onClick={() => handleServiceSelect(option)}\r\n                        >\r\n                          {option}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              </th>\r\n              <th>Phone Number</th>\r\n              <th>Status</th>\r\n              <th></th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {!isLoadingList &&\r\n              filteredBusinesses.length > 0 &&\r\n              filteredBusinesses.map((business) => {\r\n                // Log the specific business object and its isApproved status right before rendering\r\n                console.log(\r\n                  // `Rendering business in table: ID: ${business.ID}, Name: ${business.businessName}, isApproved: ${business.isApproved}, typeof isApproved: ${typeof business.isApproved}`\r\n                   `BusinessManagement - Rendering Row: ID=${business.ID}, Name=\"${business.businessName}\", isApproved=${business.isApproved} (Type: ${typeof business.isApproved})`\r\n                );\r\n                const isActive = !!business.isApproved; // Explicit boolean conversion\r\n                return (\r\n                  <tr key={business.ID}>\r\n                    <td>{business.ID}</td>\r\n                    <td>{business.businessName}</td>\r\n                    <td>{business.serviceProvided}</td>\r\n                    <td>{business.phoneNumber}</td>\r\n                    <td>\r\n                      <span className={`status ${isActive ? 'active' : 'inactive'}`}>\r\n                        {isActive ? 'Active' : 'Inactive'}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <Link to={`/business-profile/${business.id}`} className=\"view-profile\">\r\n                        view profile\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            {!isLoadingList && filteredBusinesses.length === 0 && !errorList && (\r\n              <tr>\r\n                <td colSpan=\"6\" style={{ textAlign: 'center' }}>No vendors found.</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BusinessManagement;\r\n"
        }
    ]
}