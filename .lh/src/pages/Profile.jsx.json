{
    "sourceFile": "src/pages/Profile.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1749652632134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1749652632134,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport '../styles/Profile.css';\r\n\r\nfunction Profile({ isSidebarOpen }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [userData, setUserData] = useState({\r\n    name: 'Admin', // This should also ideally be fetched\r\n    loginPhoneNumber: 'storedphonenumber', // Initialize as empty, will be fetched\r\n    address: '123 Main St, City', // This should also ideally be fetched\r\n  });\r\n  const [editedData, setEditedData] = useState({ ...userData });\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  useEffect(() => {\r\n    // Fetch user data when the component mounts\r\n    // For now, we'll just get the login phone number from localStorage\r\n    // In a real app, you might fetch all user profile data from an API\r\n    const storedLoginPhoneNumber = localStorage.getItem('adminLoginPhoneNumber');\r\n    if (storedLoginPhoneNumber) {\r\n      setUserData(prevData => ({\r\n        ...prevData,\r\n        loginPhoneNumber: storedLoginPhoneNumber,\r\n      }));\r\n      setEditedData(prevData => ({ // Also update editedData if userData changes\r\n        ...prevData,\r\n        loginPhoneNumber: storedLoginPhoneNumber,\r\n      }));\r\n    } else {\r\n      // Handle case where login phone number is not found (e.g., redirect to login)\r\n      console.warn(\"Login phone number not found in localStorage.\");\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleEdit = () => setIsEditing(true);\r\n  const handleSave = () => {\r\n    setUserData({ ...editedData });\r\n    setIsEditing(false);\r\n  };\r\n  const handleChange = (e) => {\r\n    setEditedData({ ...editedData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleChangePassword = () => {\r\n    // In a real application, this would navigate to a change password screen\r\n    // or open a modal for changing the password.\r\n    alert(\"Redirecting to change password page (not implemented).\");\r\n    // navigate('/change-password'); // Example navigation\r\n  };\r\n\r\n  return (\r\n    <div className={`profile ${isSidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}>\r\n      <div className=\"profile-header\">\r\n        <div className=\"header-left\">\r\n          <span className=\"back-arrow\" onClick={() => navigate(-1)} style={{cursor: 'pointer'}}>‚Üê</span>\r\n          <h1>Profile</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"profile-content\">\r\n        <div className=\"profile-card\">\r\n          <div className=\"profile-info\">\r\n            <h2>User Information</h2>\r\n            <div className=\"info-row\">\r\n              <span>Name:</span>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={editedData.name}\r\n                  onChange={handleChange}\r\n                />\r\n              ) : (\r\n                <span>{userData.name}</span>\r\n              )}\r\n            </div>\r\n            {/* <div className=\"info-row\">\r\n              <span>Login Phone:</span>\r\n              <span>{userData.loginPhoneNumber}</span>\r\n            </div> */}\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;   "
        }
    ]
}